filter {
  if [type] == "nginx-access" {
    grok {
      patterns_dir => "/etc/logstash/patterns"
      match => { "message" => "%{NGINXACCESS}" }
      add_tag => ["nginx_access"]
    }

   geoip {
     source => "clientip"
     target => "geoip"
     database => "/etc/logstash/GeoLiteCity.dat"
     add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
     add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
   }

   date {
      match => ["syslog_timestamp",
        "MMM  d HH:mm:ss",
        "MMM dd HH:mm:ss",
        "MMM  d yyyy HH:mm:ss",
        "MMM dd yyyy HH:mm:ss",
        "yyyy-MM-dd HH:mm:ss,SSS",
        "ISO8601",
        "dd/MMM/yyyy:HH:mm:ss Z"
      ]
    }
    mutate {
      convert => [ "[geoip][coordinates]", "float"]
   }
 }
}

################nginx-error################
filter {
  if [type] == "nginx-error" {
    grok {
      patterns_dir => ["/etc/logstash/patterns"]
      match => { "message" => "%{NGINXERROR" }
      add_tag => ["nginx_error"]
    }
    geoip {
      source => "clientip"
      target => "geoip"
      database => "/etc/logstash/GeoLiteCity.dat"
      add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
      add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
    }
      date {
      match => ["syslog_timestamp",
        "MMM  d HH:mm:ss",
        "MMM dd HH:mm:ss",
        "MMM  d yyyy HH:mm:ss",
        "MMM dd yyyy HH:mm:ss",
        "yyyy-MM-dd HH:mm:ss,SSS",
        "ISO8601",
        "dd/MMM/yyyy:HH:mm:ss Z"
      ]
    }
    mutate {
      convert => [ "[geoip][coordinates]", "float" ]
    }
  }
}
